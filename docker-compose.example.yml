version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    hostname: postgres
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=50'
      - '-c'
      - 'shared_buffers=1GB'
      - '-c'
      - 'effective_cache_size=4GB'
      - '-c'
      - 'work_mem=16MB'
      - '-c'
      - 'maintenance_work_mem=512MB'
      - '-c'
      - 'random_page_cost=1.1'
      - '-c'
      - 'temp_file_limit=10GB'
      - '-c'
      - 'log_min_duration_statement=200ms'
      - '-c'
      - 'idle_in_transaction_session_timeout=10s'
      - '-c'
      - 'lock_timeout=1s'
      - '-c'
      - 'statement_timeout=60s'
      - '-c'
      - 'shared_preload_libraries=pg_stat_statements'
      - '-c'
      - 'pg_stat_statements.max=10000'
      - '-c'
      - 'pg_stat_statements.track=all'
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'test'
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DATA: '/var/lib/postgresql/data/pgdata'
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    ports:
      - '5432:5432'
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: 'soorq@admin.com'
      PGADMIN_DEFAULT_PASSWORD: 'soorq'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - '5050:80'
    restart: unless-stopped
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

  main:
    container_name: main
    hostname: main
    build:
      context: .
      dockerfile: ./Dockerfile
    networks:
      - postgres
    environment:
      - RATE_LIMIT_MAX=1000
      - DOMAIN=UDOMAIN # <-< REQUIRED!
      - PORT=UPORT # <-< REQUIRED!
      - DB_HOST=postgres
      - DB_NAME=UNAME # <-< REQUIRED!
      - DB_USER=postgres
      - DB_PASS=postgres
      - DB_TYPE=postgres
    ports:
      - '2020:2020'
    depends_on:
      - postgres
    restart: always

volumes:
  db-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge
